name: Deploy to AWS ECS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set Dynamic Image Tag
        run: |
          # Extract short SHA (first 7 characters of the commit hash)
          SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-7)

          # Extract branch name dynamically and replace slashes with dashes (Docker tags cannot have slashes)
          BRANCH_NAME=$(echo ${{ github.ref_name }} | sed 's/\//-/g')

          # Construct the final image tag
          IMAGE_TAG="${SHORT_SHA}-${BRANCH_NAME}"

          # Export the image tag as an environment variable for later steps
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

          # Construct the full image path and echo it
          FULL_IMAGE_TAG="${{ steps.login-ecr.outputs.registry }}/nodejs-ecs:$IMAGE_TAG"
          echo "FULL_IMAGE_TAG=$FULL_IMAGE_TAG" >> $GITHUB_ENV

          echo "âœ… Final Image Tag: $FULL_IMAGE_TAG"

      - name: Build and Push Docker Image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: nodejs-ecs
        run: |
          echo "ðŸ”¹ ECR Registry: $ECR_REGISTRY"
          echo "ðŸ”¹ Building Docker Image with tag: $IMAGE_TAG"

          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .

          echo "ðŸ”¹ Full Image Tag: $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
          echo "ðŸ”¹ Pushing Docker Image to ECR..."

          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

          echo "âœ… Successfully pushed image: $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

      - name: Deploy to AWS ECS
        run: |
          echo "ðŸ”¹ Deploying image to ECS service..."
          aws ecs update-service --cluster ${{ secrets.ECS_CLUSTER_NAME }} --service ${{ secrets.ECS_SERVICE_NAME }} --force-new-deployment
          echo "âœ… ECS service updated successfully!"
